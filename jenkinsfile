pipeline {
agent any
    stages {
        stage('Clone sources') {
            steps {
                git url: 'https://github.com/imkunalll/Manager.git'
            }
        }
        stage("Quality Gate"){
    timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
    def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
    if (qg.status != 'OK') {
        error "Pipeline aborted due to quality gate failure: ${qg.status}"
    }
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
        
        stage('Build') {
            steps {
                echo 'building'
            }
        }
        
        stage('Deploy') {
            steps {
                echo 'Deploying'
            }
        }
        
        stage('Test') {
            steps {
                echo 'Testing'
            }
        }
      
        stage('Release') {
            steps {
                echo 'Realeasing'
            }
        }
  }
  }
